// Generated by BUCKLESCRIPT VERSION 5.0.4, PLEASE EDIT WITH CARE

import * as Block from "bs-platform/lib/es6/block.js";
import * as Js_dict from "bs-platform/lib/es6/js_dict.js";
import * as Js_json from "bs-platform/lib/es6/js_json.js";
import * as Caml_option from "bs-platform/lib/es6/caml_option.js";

function userOfJSON(dict) {
  var match = Js_dict.get(dict, "id");
  if (match !== undefined) {
    var match$1 = Js_json.classify(Caml_option.valFromOption(match));
    if (typeof match$1 === "number" || match$1.tag) {
      return /* Error */Block.__(1, ["User ID is not a string"]);
    } else {
      var match$2 = Js_dict.get(dict, "name");
      if (match$2 !== undefined) {
        var match$3 = Js_json.classify(Caml_option.valFromOption(match$2));
        if (typeof match$3 === "number" || match$3.tag) {
          return /* Error */Block.__(1, ["Display Name is not a string"]);
        } else {
          return /* Ok */Block.__(0, [{
                      id: match$1[0],
                      name: match$3[0]
                    }]);
        }
      } else {
        return /* Error */Block.__(1, ["User Name could not be found"]);
      }
    }
  } else {
    return /* Error */Block.__(1, ["User ID could not be found"]);
  }
}

export {
  userOfJSON ,
  
}
/* No side effect */
